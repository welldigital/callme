// Code generated by go-bindata.
// sources:
// 20171115153101_create_job_table.down.sql
// 20171115153101_create_job_table.up.sql
// 20171115154457_create_joblease_table.down.sql
// 20171115154457_create_joblease_table.up.sql
// 20171115154634_create_jobresponse_table.up.sql
// 20171115154931_create_schedule_table.up.sql
// 20171115155747_create_crontab_table.up.sql
// 20171115155941_create_schedulelease_table.up.sql
// 20171115160316_create_relationships.up.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __20171115153101_create_job_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xc8\xca\x4f\x4a\xb0\xe6\x02\x04\x00\x00\xff\xff\xe2\xbe\x7c\x92\x12\x00\x00\x00")

func _20171115153101_create_job_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153101_create_job_tableDownSql,
		"20171115153101_create_job_table.down.sql",
	)
}

func _20171115153101_create_job_tableDownSql() (*asset, error) {
	bytes, err := _20171115153101_create_job_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153101_create_job_table.down.sql", size: 18, mode: os.FileMode(420), modTime: time.Unix(1510836925, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115153101_create_job_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\xc8\xca\x4f\x4a\x50\xd0\xe0\x52\x50\x48\xc8\x4c\x01\xb3\x3d\xfd\x42\x14\xfc\xfc\x43\x14\xfc\x42\x7d\x7c\x74\x20\xe2\xc5\xc9\x19\xa9\x29\xa5\x39\xa9\x50\x49\x98\x44\x79\x46\x6a\x5e\x82\x82\x8b\x63\x88\x6b\x88\xa7\xaf\x2b\xaa\xa6\xc4\xa2\xbc\x04\x85\x30\xc7\x20\x67\x0f\xc7\x20\x0d\x23\x03\x13\x0b\x4d\x84\x5c\x41\x62\x65\x4e\x7e\x62\x4a\x82\x82\xaf\xab\x8b\x67\xa8\x6f\x88\x6b\x04\x42\x63\x40\x90\xa7\xaf\x63\x50\xa4\x82\xb7\x6b\xa4\x82\x06\xd4\x49\x9a\x9a\xd6\x5c\x80\x00\x00\x00\xff\xff\x58\xa1\xf6\x7e\xb5\x00\x00\x00")

func _20171115153101_create_job_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153101_create_job_tableUpSql,
		"20171115153101_create_job_table.up.sql",
	)
}

func _20171115153101_create_job_tableUpSql() (*asset, error) {
	bytes, err := _20171115153101_create_job_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153101_create_job_table.up.sql", size: 181, mode: os.FileMode(420), modTime: time.Unix(1510836880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115154457_create_joblease_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xc8\xca\x4f\xca\x49\x4d\x2c\x4e\x4d\xb0\xe6\xe2\x02\x04\x00\x00\xff\xff\xae\xaf\xa8\x60\x18\x00\x00\x00")

func _20171115154457_create_joblease_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115154457_create_joblease_tableDownSql,
		"20171115154457_create_joblease_table.down.sql",
	)
}

func _20171115154457_create_joblease_tableDownSql() (*asset, error) {
	bytes, err := _20171115154457_create_joblease_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115154457_create_joblease_table.down.sql", size: 24, mode: os.FileMode(420), modTime: time.Unix(1510836931, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115154457_create_joblease_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x48\xc8\xca\x4f\xca\x49\x4d\x2c\x4e\x4d\x50\xd0\xe0\x52\x50\x48\xc8\x4c\x41\x08\x78\xfa\x85\x28\xf8\x85\xfa\xf8\x28\x38\x86\x86\xf8\xc7\x7b\xfa\x39\x07\xb9\xfa\xba\xfa\x85\xe8\x80\xd4\xe5\xe4\x27\x67\xa7\xa6\x24\x55\x26\x28\x84\x39\x06\x39\x7b\x38\x06\x69\x18\x99\x9a\x69\x2a\xf8\xf9\x43\xb4\x80\xd5\x24\x96\x24\x28\xb8\x38\x86\xb8\x86\x78\xfa\xba\xa2\xca\x94\xe6\x95\x64\xe6\xe0\x90\x0c\x08\xf2\xf4\x75\x0c\x8a\x54\xf0\x76\x8d\x54\xd0\x40\x76\x8f\xa6\xa6\x35\x17\x20\x00\x00\xff\xff\x96\x2d\x0d\xff\xbc\x00\x00\x00")

func _20171115154457_create_joblease_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115154457_create_joblease_tableUpSql,
		"20171115154457_create_joblease_table.up.sql",
	)
}

func _20171115154457_create_joblease_tableUpSql() (*asset, error) {
	bytes, err := _20171115154457_create_joblease_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115154457_create_joblease_table.up.sql", size: 188, mode: os.FileMode(420), modTime: time.Unix(1510836934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115154634_create_jobresponse_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x0a\xc2\x30\x10\x40\xf7\x7e\xc5\x8d\x2d\xf8\x07\x4e\x69\x7b\xc3\x61\x92\x4a\xb8\x80\x9d\x8c\xd2\x0c\x11\x35\x92\xf8\xff\x38\x28\x2d\x0d\x76\x7d\xef\xdd\x1d\xd7\x19\x14\x8c\xc0\xa2\x95\x08\xee\x16\xaf\xc9\xe7\x57\x7c\x66\xef\xa0\xae\x00\x5c\x98\x56\x8c\x34\x83\xb6\x52\x82\xb0\x3c\x9c\x49\x77\x06\x15\x6a\xde\xcd\xe9\xdd\x5f\xe6\x6e\xf8\xb6\x8b\x0c\xd3\x1f\xf3\x0e\x0f\xef\xa0\x17\x8c\x4c\x0a\xd7\x6e\x39\xac\xb0\x27\xab\x18\x4f\xe5\xde\xec\x53\x8a\xc9\x41\x4b\x85\xf9\xf1\x8d\xc1\xa3\x21\x25\xcc\x08\x07\x1c\xa1\x2e\xbe\x6c\x9a\x7d\xf5\x09\x00\x00\xff\xff\xc1\xbf\xc5\x51\x18\x01\x00\x00")

func _20171115154634_create_jobresponse_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115154634_create_jobresponse_tableUpSql,
		"20171115154634_create_jobresponse_table.up.sql",
	)
}

func _20171115154634_create_jobresponse_tableUpSql() (*asset, error) {
	bytes, err := _20171115154634_create_jobresponse_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115154634_create_jobresponse_table.up.sql", size: 280, mode: os.FileMode(420), modTime: time.Unix(1510836939, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115154931_create_schedule_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4f\x85\x30\x14\x85\xf7\xf7\x2b\xee\x08\x89\x93\x89\x2e\x4e\x7d\x70\x13\x1b\x69\x31\xcd\xc5\xc8\xe4\xad\xf4\x1a\x49\x10\x4c\xad\x46\xfe\xbd\x01\x07\x44\xe3\x5b\xcf\xf7\x9d\x33\x9c\xc2\xa1\x22\x04\x52\xc7\x0a\x81\xdf\xba\x67\x09\xef\x83\x30\x64\x07\x00\xee\xc3\x16\x68\x4b\x60\x9b\xaa\x02\xd5\x50\xfd\xa0\x6d\xe1\xd0\xa0\xa5\xb3\xc5\x93\xcf\x24\x71\xf4\x43\x1f\x18\xee\x94\x2b\xae\x95\xcb\xce\x2f\x2e\x73\xb0\xf5\x77\x69\xb5\x1e\xe7\x53\xd4\xc7\x91\x81\xf0\x9e\xf6\xf1\xab\x9f\x87\xc9\x07\x06\x83\xa5\x6e\xcc\x5f\xa1\x8b\xe2\x93\x04\x86\x52\x11\x92\x36\xb8\xc7\x4f\x71\x7a\xf9\x8f\xf9\x2e\xf5\x1f\xc2\x70\xd4\xbf\x36\x83\xac\x68\xd9\x0d\x3e\xc9\xd6\x5f\xe8\xad\xd3\x46\xb9\x16\x6e\xb0\x85\xec\xe7\x45\x79\x7e\x75\xf8\x0a\x00\x00\xff\xff\x32\xf9\xeb\xf8\x4f\x01\x00\x00")

func _20171115154931_create_schedule_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115154931_create_schedule_tableUpSql,
		"20171115154931_create_schedule_table.up.sql",
	)
}

func _20171115154931_create_schedule_tableUpSql() (*asset, error) {
	bytes, err := _20171115154931_create_schedule_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115154931_create_schedule_table.up.sql", size: 335, mode: os.FileMode(420), modTime: time.Unix(1510836943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115155747_create_crontab_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\x47\x85\x4e\x41\x5d\x3a\x4d\x36\xd0\x92\xae\xb1\x8c\x81\xa7\xd6\xdc\x85\x04\x51\xd1\xdd\xe8\xf1\x83\x0c\xc9\x83\xc7\xe1\xff\x63\xe0\x8b\x15\x21\x13\x30\x1e\x13\x02\x5d\x0d\x5d\xeb\xca\x87\x86\x30\x00\xd0\xb5\x99\x6f\x21\x19\x64\x9e\x24\x80\x39\x67\x77\x21\x63\x45\x29\x49\xde\x4c\x6c\xac\x9e\xd6\xf8\xc6\xfe\x5c\x36\xd9\x6f\x9c\x3f\xdc\x50\xc5\x67\x54\xe1\x76\xb7\x8f\x96\xa4\x1f\xec\xab\xee\xfc\xa8\xe1\x84\x4c\x2c\x52\x5a\xf6\xd6\xbe\xdd\x5a\x6b\xca\xd1\xf9\xde\x94\xce\x9a\x15\x72\x55\x22\x45\x55\xc0\x85\x0a\x08\xff\x26\x45\xd1\x21\xf8\x04\x00\x00\xff\xff\x8f\x22\xa5\x59\xfd\x00\x00\x00")

func _20171115155747_create_crontab_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115155747_create_crontab_tableUpSql,
		"20171115155747_create_crontab_table.up.sql",
	)
}

func _20171115155747_create_crontab_tableUpSql() (*asset, error) {
	bytes, err := _20171115155747_create_crontab_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115155747_create_crontab_table.up.sql", size: 253, mode: os.FileMode(420), modTime: time.Unix(1510836947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115155941_create_schedulelease_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x0a\xc2\x40\x10\x44\xfb\x7c\xc5\x94\x09\x58\x09\xda\x58\xad\x71\xc1\xc3\xe4\x22\xcb\x46\x48\xe5\xc5\xdc\x81\xc1\x43\x8b\x24\x85\x7f\x2f\x6a\xa5\x62\x3b\xef\x0d\xbc\x5c\x98\x94\xa1\xb4\x2e\x18\x6e\xe8\xce\xc1\x4f\x31\xc4\xd0\x0e\xc1\x21\x4d\x00\xd7\xfb\xaf\xd5\x58\x85\xad\x8b\x02\x54\x6b\x75\x34\x36\x17\x2e\xd9\xea\xec\x29\xc7\x5b\x77\x09\xfe\x74\x77\x38\x90\xe4\x5b\x92\x74\xbe\x58\x66\xb0\xd5\xfb\xf2\x72\xda\xd1\x61\x43\xca\x6a\x4a\xfe\x24\xd3\x75\xec\xe3\x1f\xb8\x17\x53\x92\x34\xd8\x71\x83\xf4\x27\x2a\xcb\x56\xc9\x23\x00\x00\xff\xff\x77\x37\x9e\xa7\xcb\x00\x00\x00")

func _20171115155941_create_schedulelease_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115155941_create_schedulelease_tableUpSql,
		"20171115155941_create_schedulelease_table.up.sql",
	)
}

func _20171115155941_create_schedulelease_tableUpSql() (*asset, error) {
	bytes, err := _20171115155941_create_schedulelease_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115155941_create_schedulelease_table.up.sql", size: 203, mode: os.FileMode(420), modTime: time.Unix(1510836952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115160316_create_relationshipsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xb1\x0e\x82\x30\x14\x45\x77\xbe\xe2\x8e\xfa\x0d\x4e\x15\x1e\x86\x48\x4a\x52\xba\x38\x01\xa5\x35\x52\x09\x35\x54\xff\xdf\x44\x6d\x44\x22\x93\xae\xf7\xbc\xe4\x9c\x3c\x96\x4b\x12\x90\x6c\x9b\x13\x6a\xeb\x54\x1d\x01\x00\x4b\x12\xc4\x05\x2f\xa5\x60\x19\x97\x38\x9e\x2b\xeb\x54\xd5\x69\xdf\x9e\x8c\xbe\xf5\x06\x8f\xab\xb4\x10\x94\xed\x38\xf6\x74\xc0\xea\x0d\xd7\x10\x94\x92\x20\x1e\x53\x89\x30\x4e\xf9\x26\x8a\xa6\x5a\xeb\xd4\x68\xfc\xc5\x0d\xde\x2c\xcb\xc3\x45\xd5\x69\xeb\x54\x6f\x1a\xff\x3d\x22\xc0\x8f\x88\x30\x4e\xf9\xef\x11\x0b\xfa\x4e\xcf\xdd\xcf\x7d\x6e\x6c\x47\x37\x5c\x1b\x85\x05\xdd\x0b\xff\xf1\xe9\xf7\x00\x00\x00\xff\xff\x74\xad\x22\xd6\xeb\x01\x00\x00")

func _20171115160316_create_relationshipsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115160316_create_relationshipsUpSql,
		"20171115160316_create_relationships.up.sql",
	)
}

func _20171115160316_create_relationshipsUpSql() (*asset, error) {
	bytes, err := _20171115160316_create_relationshipsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115160316_create_relationships.up.sql", size: 491, mode: os.FileMode(420), modTime: time.Unix(1510836964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x9a\xdf\x6f\xe3\x36\x12\xc7\x9f\xad\xbf\x42\x0d\xd0\xc2\x3e\xe4\x12\x51\xa2\x7e\x05\xd8\x97\x76\x7b\x40\x1f\xae\x05\xae\xed\xd3\xf1\xb0\xa0\x28\x32\xd5\x9d\x63\xa5\xb6\xd3\xe5\xee\x62\xff\xf7\xc3\x97\x33\x4a\xbc\xd9\xd8\x52\x62\x6f\xfb\xe0\xe8\x47\xa4\xe1\xcc\x48\xf3\xe1\x77\x68\x5f\x5e\xc6\xdf\xf5\xad\x8d\xaf\xed\xca\xae\xf5\xd6\xb6\x71\xf3\x2e\xbe\xee\xff\xde\x74\xab\x56\x6f\xf5\x45\x74\x79\x19\x6f\xfa\xbb\xb5\xb1\x9b\x2b\xec\xa7\x89\x28\x85\x10\xb9\xc8\x33\x91\x88\x37\x66\x6d\xf5\xd6\xbe\xf9\x6f\xdf\xbc\xd9\xea\x66\x69\x2f\xda\xfe\xed\xea\x62\xf3\xfb\x72\xca\xb5\x77\xb7\x9f\x5f\x29\x65\x5e\xee\x5c\xb9\xb4\x7a\x63\x0f\x9a\x3e\x70\xc3\x93\xf6\x8b\x4c\xee\x5c\xbe\xb6\x9b\xdb\x7e\x75\xf8\x8e\x3a\xbb\xf7\x7d\x63\x7e\xb3\xed\xdd\xf2\xd0\xe5\x79\x29\xef\xfd\x31\xeb\x7e\xb5\xd5\x87\xc2\xcd\x6b\xf9\x99\xf1\x91\x10\x8a\x24\x13\xc5\x70\xcf\xda\x2e\xf5\xb6\xeb\x57\x9b\xdf\xba\xdb\xcd\xce\xd5\xc3\xe3\xbb\xee\x71\xf4\xfa\xa7\xf8\xc7\x9f\x7e\x89\xbf\x7f\xfd\xc3\x2f\x5f\x45\xd1\xad\x36\xff\xd3\xd7\x36\xbe\xe9\xae\xd7\x74\x73\x14\x75\x37\xb7\xfd\x7a\x1b\xcf\xa3\xd9\x59\xf3\x6e\x6b\x37\x67\xd1\xec\xcc\xf4\x37\xb7\x6b\xbb\xd9\x5c\x5e\xbf\xef\x6e\x71\xc2\xdd\x6c\xb1\xe9\x7a\xfa\x7b\xd9\xf5\x77\xdb\x6e\x89\x83\x3e\xdc\x70\xab\xb7\xbf\x5d\xba\x6e\x69\xb1\x83\x13\x9b\xed\xba\x5b\x5d\x87\xff\x6d\xbb\x1b\x7b\x16\x2d\xa2\xc8\xdd\xad\xcc\xe0\xde\xbf\xac\x6e\xe7\xd8\x89\xff\xfd\x1f\x0c\x7b\x1e\xaf\xf4\x8d\x8d\xe9\xb6\x45\x3c\x1f\xce\xda\xf5\xba\x5f\x2f\xe2\x0f\xd1\xec\xfa\x7d\x38\x8a\xaf\x5e\xc5\xf0\xea\xe2\x47\xfb\x16\x46\xec\x7a\x1e\xdc\xc6\xf1\xb7\x77\xce\xd9\x75\x30\xbb\x58\x44\xb3\xce\x85\x1b\xbe\x7a\x15\xaf\xba\x25\x4c\xcc\xd6\x76\x7b\xb7\x5e\xe1\xf0\x3c\x76\x37\xdb\x8b\xef\x61\xdd\xcd\xcf\x60\x28\xfe\xfa\xf7\xab\xf8\xeb\x3f\xce\xc8\x93\x30\xd6\x22\x9a\x7d\x8c\xa2\xd9\x1f\x7a\x1d\x37\x77\x2e\xa6\x71\x68\x90\x68\xf6\x86\xdc\x79\x15\x77\xfd\xc5\x77\xfd\xed\xbb\xf9\x37\xcd\x9d\x3b\x8f\xaf\xdf\x2f\xa2\x99\x59\x7e\x3f\x78\x7a\xf1\xdd\xb2\xdf\xd8\xf9\x22\x3a\x95\x3f\x30\x43\xf6\xf7\x18\xb2\xeb\x35\xf9\xcd\x27\x9b\x3b\x77\xf1\x2d\x5c\x9f\x2f\xce\x71\x45\xf4\x31\x8a\xb6\xef\x6e\x6d\xac\x37\x1b\xbb\x45\xca\xef\xcc\x16\x56\x42\x7c\xfc\x3c\xa2\x59\xb7\x72\x7d\x1c\xf7\x9b\x8b\x7f\x74\x4b\xfb\xc3\xca\xf5\xf7\xf7\xf1\x23\x1c\xce\xef\x58\x08\xcf\x30\x8e\xf9\x31\x46\xb3\x4d\xf7\x3e\x1c\x77\xab\x6d\x21\xa3\xd9\x0d\x70\x13\xdf\x1b\xfd\x67\xdf\xda\x70\xf2\x97\xee\xc6\xc6\x78\x4d\x2e\xb0\x87\x71\xc2\xab\x32\x77\xdd\xe3\xb1\x16\xf1\x8f\xfa\xc6\xce\x17\x3c\x02\xc6\xe4\x28\x5d\x77\x81\xd1\xa3\x8f\x07\xee\xfd\xb9\x7b\x8f\x7b\x83\x37\x9f\xde\x0a\x47\x0f\xde\x0a\x5f\xe7\x8b\x5d\xcf\x3f\x35\x80\xd0\xc6\x0c\x20\xb8\xf9\xe2\x21\xd0\xcf\x2c\x70\xf4\xfb\x8d\xfc\xb0\x79\xdd\xad\xe7\x8b\xb8\xe9\xfb\xe5\xee\xdd\x7a\xb9\x19\x89\xfc\xdd\x86\x02\xb7\x6b\xa7\x8d\xfd\xf0\x71\xe7\x6e\x7e\x25\xf0\x96\xbf\x79\x33\x02\xee\xd7\xfd\xdb\xd5\xcf\xbf\x2f\xe3\x57\xfc\x9a\xcc\xcf\x94\x17\x4e\xf9\xaa\x51\x3e\xa9\x94\x4f\x92\xa7\x3f\xce\x29\x5f\xa6\xca\x27\xb5\xf2\x0e\x5b\xa7\x7c\x9e\xd0\x3d\xa5\x50\xbe\x94\x74\x1e\xfb\x79\xae\xbc\xac\x94\x37\xf8\x68\xe5\xa5\x53\x5e\x6a\xe5\x9b\x44\x79\x5b\x28\x9f\xe0\x7e\xf9\xa9\x6d\x7c\x6c\xaa\x7c\x63\x95\x2f\x8d\xf2\x75\xaa\xbc\x48\x77\x7d\x38\x1b\x00\x34\x31\x44\xae\x98\xa7\x48\x34\xd4\xd5\x0e\xc9\xa2\xd9\x6c\x6a\xee\xce\xa3\xd9\xec\x6c\xea\x5c\x7a\x76\x1e\xcd\x16\xf7\x05\x31\x71\x04\x78\xfd\xb7\x50\xdc\xbb\x5e\x87\xea\xbe\x47\xe8\xf3\xb2\x30\xc6\xae\x7b\xe4\x04\x68\x5c\xbd\x7a\xfc\x02\x7e\x40\x69\x5e\xc5\xcf\x08\x3b\x46\x45\x5e\xc5\xa2\x3a\x8f\x51\x5a\x57\xbb\x95\x37\x97\x69\xb2\x08\xe7\x51\x30\x57\x54\x50\xbf\xae\x3a\x3f\x17\xb9\x48\xaa\xac\xa8\xd3\xfc\x3c\x4e\x16\x1f\xa3\x99\x86\x33\xdf\x84\x5c\x7c\x08\x09\xb8\x8a\x39\x0f\xf0\xf4\x2a\xfc\xfd\x78\xff\x44\xf5\xf9\xb3\x8a\xe1\xd7\xdb\xa3\x4a\xc1\xd2\xb6\xcc\x95\x4f\xcc\xc3\xab\xff\x9c\x92\x40\x09\xb5\x28\x8b\x44\xf9\x3c\xa5\xe3\xe1\x3a\x69\x94\x4f\x84\xf2\x4d\xa6\x7c\xd6\x2a\xef\x5a\xe5\x25\xca\x02\x76\x0d\x7d\x64\xf6\x70\x8c\xff\x95\x2d\x95\x0f\xc6\x4e\x13\x2a\x29\x93\x2b\x6f\x6a\xe5\x45\xad\xbc\xae\x95\x4f\xb1\xcd\x95\xcf\xf8\x38\x8c\x59\x2b\x5f\x63\x4c\xa9\x7c\x59\x2b\x2f\x0b\xe5\x0b\xf8\x67\x95\xaf\x52\xfe\x34\xca\x17\x99\xf2\x55\xa5\x7c\xd1\xd0\x56\x97\xca\x6b\xa7\x7c\xda\x28\xaf\xb5\xf2\xba\x50\xde\x48\xe5\x35\x4a\xd9\x50\x99\x57\x18\x2b\x51\xde\x94\xe4\x53\x51\x12\x3e\x86\xe3\xa4\x55\x3e\xcd\x94\x4f\x10\x0b\xb6\x8d\xf2\xb2\x55\xbe\x92\xca\xe7\x88\x4b\x28\x5f\xa4\xca\x17\xc8\x21\x72\x6e\xe9\x18\xf9\x1b\x7c\x83\x0f\xba\x61\x1f\xe1\x13\x7c\x74\x0f\xbe\xc2\x0f\xe4\x07\xfe\xcb\x44\xf9\x3a\x79\xf0\x1d\xe7\x90\x03\x2d\xc9\x56\x53\xd2\x3d\xc3\x71\x52\x28\xdf\x4a\xce\x91\xa6\x4f\x5b\x90\x6f\xd5\x13\xef\x06\x3e\x39\x72\x23\x94\x77\x05\xf9\xdb\xe4\x2f\x42\x59\x78\x41\x4f\x0f\xb2\x60\x76\x12\xc6\x48\x95\x3e\x0f\x62\xc1\xfa\x29\x10\xb6\x1b\xfd\x9f\x05\xb0\x21\xe0\x7b\x7c\x89\x97\xf0\xab\xaa\x92\x13\xf3\x6b\x7f\xab\xf4\x57\xcd\xe8\x61\x5b\x53\xa9\xa6\x86\x4a\x13\xfb\xc3\x2c\x0f\xf4\xec\x9b\xe9\xb5\xe5\x92\x45\x79\x26\xca\x8b\x6a\xac\x3c\x46\xe3\x3f\xaa\x4a\x46\xad\x3f\x2a\x96\x09\x9d\xee\xde\x9a\x19\x1d\xeb\x99\xa5\x33\x35\x33\xa7\xaf\xa0\x49\x59\xe0\x42\x4a\xe5\x8b\x74\x40\x26\xfe\xb4\x3a\xfa\x6b\xc5\xc0\xbe\x6a\x1a\x13\x08\x98\x1c\xc3\x18\x95\xf2\x4e\xd3\x64\x9b\x62\xbf\xa2\x7d\x9c\xc3\x3e\xce\x65\x38\x57\xd0\x07\xe7\x30\x01\x97\x0d\x5d\x03\x31\x90\x94\xca\x37\x35\x1d\x37\xfa\xc1\x9e\xad\x68\xa2\xc3\x24\x68\x71\x0c\x71\x51\xf2\x44\x5b\xd2\xa4\x9f\x4a\x8a\x2b\x2d\x68\x2c\x4c\xde\xc1\x66\x41\x5b\x8c\x83\xf1\x71\x5c\xd4\x54\xf1\x35\x4f\xa8\x38\x4e\xd9\x4f\x57\x93\xa8\x69\x24\x8f\x99\x93\xed\x9a\xc7\x80\xed\x66\x27\x96\x86\xb7\x43\xfc\xf0\x1b\xe2\x03\xf9\xac\x25\x91\xa8\xce\x95\x2f\x78\xdf\xf2\xe4\x8f\x67\x84\xbc\xe1\x99\x38\xf9\xf0\xdc\x2a\x88\x1e\x3c\xab\x44\xf9\x12\xb9\x6a\xe9\x18\xcf\x40\x0e\xe7\x1c\xc5\x8c\x4f\x96\x2b\x2f\x06\x21\xf3\x88\x72\xc1\xe7\x96\x04\x0e\x8e\x83\x20\x7a\x21\xe5\x8e\x57\x02\x23\xb6\xa7\x13\x6e\x44\x13\x8c\x8c\x73\x32\xba\x7d\x59\x75\x30\x21\xfe\x7b\x89\xf0\xb2\x16\x27\x93\xa7\x46\xdb\xa1\xe5\xd1\x23\xe8\x26\xe9\x8d\x6f\x40\x1a\xad\xbc\x49\x49\xce\x0b\xae\x08\x57\x92\xc4\x45\x9b\x81\x6a\xc1\x1b\x8f\x4a\x06\x4d\x40\xb1\x82\xab\xdf\x64\xca\x17\x82\x3a\xfb\xb0\x1a\xc0\x54\xa9\x21\xf5\x8d\xf2\x6d\x4a\x15\x28\x04\x55\x15\xae\x0b\x44\x70\x54\xed\xa8\xfc\xa1\x9a\x50\x85\x68\x75\xac\x53\xbe\x6d\x95\x17\xad\xf2\x6d\x49\x2d\x0e\xda\x21\xd8\x33\x09\x91\xa0\x66\x0a\x5b\xab\xbc\x28\x48\x77\xa0\x1d\xb2\xa5\xf2\x79\x49\xed\x52\x51\x90\x2d\x9d\x90\x36\x41\xec\x90\xf7\x68\x89\xf2\x82\xec\x65\xb0\x0b\x32\x15\x44\xe2\xd0\x2a\x24\xca\x67\xb8\xce\x10\xbd\xcb\x92\x08\x27\x72\x6a\x9f\x5a\xe4\x05\x7e\xd6\xe4\x67\xee\x88\x42\x85\xa5\xd8\x60\x2b\x3c\x03\xc4\x9f\xd1\x33\x71\x19\xcd\x26\xd0\x63\x83\x4f\x20\x0c\x7c\x08\x2d\xa1\xa6\x58\x61\x23\xb4\x70\x86\xfc\x00\x91\xd1\x02\x81\xac\x98\x51\x40\x6a\x8c\x6f\x8d\xf2\x79\x46\x64\x43\xdc\x98\x31\x64\xc3\xb3\x03\x68\x2f\xe8\xb9\x19\xa1\xbc\xce\x94\x4f\x85\xf2\x29\x5a\x46\x26\x24\x9e\xa3\x30\xd4\xce\xa4\x96\x56\x68\x0a\x43\xe4\xc6\x33\x70\x39\x69\xc8\xc7\xf4\x83\xbd\xc6\xd1\x7b\x91\x0b\xd6\x78\xe2\x20\xfd\x46\x5f\xe0\xe3\x00\x38\x6a\xfe\x31\x03\x27\x7c\xdf\xb0\x1f\x83\xa3\xa3\x3d\x97\x84\x53\xb3\xf3\x05\x60\x38\x29\x11\x83\xd2\x43\xef\xf3\x12\x1e\xd6\xa7\xe6\xe1\xde\x2f\x7f\x8e\x80\xa1\x21\xf9\x90\x09\x2a\xb2\x61\x6d\x43\xf0\x3a\x07\x60\x88\x4f\xda\x10\x70\x60\xaf\x82\xcc\xc9\x68\x8b\x02\x0a\x6b\x18\x80\x58\x42\xeb\x1d\xa2\x21\x48\xc2\x26\x60\x11\xd6\x6b\x2a\x92\x59\xba\x25\x79\x22\x58\x1e\x06\xe8\x1a\x3a\x2f\x21\xe3\x50\x90\x2d\x17\x56\x49\xeb\x37\x36\x53\x3e\x07\x70\x1d\xf9\x02\xc0\x66\x19\x41\x0a\xf0\x0e\x85\xcc\x8d\x19\x40\x06\x19\x08\xa8\x54\x42\xf9\xd6\x91\x84\x0a\x6b\x34\x35\x01\x08\xd0\x43\x8c\x90\x50\x18\x03\xb9\x40\x6c\x00\x3a\x80\x5a\x54\x04\x14\x34\x72\x35\xaf\x03\xa1\xf1\x83\x74\x83\x5c\x75\x2d\x41\xac\x00\x08\x05\x49\xa9\x00\xda\x9c\xd6\xb6\x10\x2f\xf2\x03\x7f\x21\xf1\x20\x91\x11\xb3\x64\x20\x0a\x86\x37\xe4\x5c\x58\x67\xb2\x04\x75\x83\x18\xad\xf2\xa9\xa3\xbc\x96\x19\x81\x10\x40\x02\x88\x91\xd3\x06\xf2\xcc\x32\xec\x33\x92\xb0\x88\xb7\x16\x14\x2f\x64\x5e\x6d\x69\x9d\x06\x20\x04\x40\x6b\xc4\x5c\x12\x2c\x13\x06\x3a\x72\x00\x7f\x01\x5d\x80\x11\x20\x47\x1e\xf1\xce\xa0\xd1\x85\xff\x61\xad\x8b\x27\x07\xc1\x13\x5d\xc6\x12\x15\x63\xe2\x7d\x09\xad\x80\x26\xf0\x62\x52\x75\xfc\x4e\xc0\x67\xc4\x8a\xe7\x53\xb2\xd4\x06\x3c\xb3\x61\x6c\x43\x79\x6e\x6b\x9a\x00\x33\x4b\xfe\x85\x75\x28\x47\x12\x1d\xef\x04\x26\x11\xbc\x17\x90\xf1\x82\x27\x1a\xe4\x24\xc8\x78\x43\x79\x90\x39\xad\xf1\x61\xd2\x86\xec\x0d\x93\xb5\xfe\x1c\xe0\x59\x4a\xfe\xd9\x86\xae\x81\xff\x23\x00\x3f\x5c\x71\xc7\xd1\xfb\xb0\xed\xc7\xe8\x1e\xfb\xe2\x77\x3f\xb7\x0f\x8f\xf3\x5c\x68\x4f\xca\xc8\x17\x20\xf6\x78\xfc\x8c\xeb\x2c\xcb\x5f\x84\x6b\x99\x9d\x18\xd7\x7b\xbf\x7c\x3f\x4e\xba\x1a\x96\x22\x09\xaf\x16\x4b\x96\xae\x86\x2b\xbe\x69\xe8\xcd\x0e\x44\x2f\xa9\x52\x42\xf3\x8d\x46\x1d\x95\xa6\xa9\x11\x47\x25\x82\x5c\xa8\x6a\x10\x08\x72\x18\x92\x0c\x14\x41\x13\x8c\x4a\x6c\x0d\xdd\x1f\xc8\x0a\xd2\x09\x92\x7d\xa8\xce\x20\xb3\x32\x92\x7a\xa8\x5c\xec\x83\x0a\x20\xa2\xe3\x55\x68\x34\xa7\x88\x0b\xf2\x11\x32\x4c\x30\x79\x41\xb0\xb0\x32\x9e\x92\x4f\x20\x00\xb6\xa8\x4c\x34\xba\xa0\x15\xc8\x93\x71\xec\xf0\x13\xe4\x43\x83\x5d\x38\xb6\x55\x13\xc1\x41\xbb\x94\x9b\x6b\xc8\x47\x90\x1e\xb4\xc4\x35\x61\x75\x3c\xa7\x6f\x08\x30\xdb\x40\x3e\x62\xb6\x81\xdc\x03\x81\x70\x6f\x3b\x2c\x1e\xf0\xec\x03\x99\x1c\x72\xc3\x63\x61\x96\xc9\x1c\xe5\x02\xf4\x07\xdd\x31\x06\x9a\x68\xc4\x0a\xe9\xde\x94\x44\x3f\x34\xc8\x5a\xd2\xf3\x04\x9d\x34\xcf\x9a\xce\xd0\xd2\x20\xae\xaf\x24\xf9\x90\x1a\x5e\x00\xd1\x44\x6b\xf8\x01\x29\x1a\x64\xb5\xa6\x15\x7b\xe4\x02\x39\x77\xec\x3b\x66\x0c\xcc\x10\x90\xaa\xc8\x69\x99\xf2\x22\x45\x4a\x71\x62\xdf\x30\x1d\x03\x01\xb9\xdd\x48\x0b\xfa\x3f\x6c\x21\x2f\x81\x90\x4f\x2c\x63\x22\x06\xd8\xc2\xcc\x90\xd7\x34\xd3\x1d\x6e\xf0\x0f\xbf\xe4\x47\x01\xf2\xb0\xe9\x47\x7c\x1c\xfb\xa5\xcb\x5e\x3c\x1e\x1e\xe5\x99\x74\x9c\x94\x8d\xd3\xc3\x71\x3c\xf8\x41\xca\xe6\xd9\xcb\xd8\x58\x9e\x9a\x8d\x87\x7f\x6a\x74\x64\x73\x6f\x3f\x6d\xee\x07\x42\x42\x4b\xba\x86\x34\x6f\xd0\x68\x92\x34\x61\x5e\xd1\xb6\xd5\xfc\x3d\x57\x4b\xba\x06\x94\x85\x26\x0c\xcb\x83\x29\xe9\x33\x68\x11\x59\x51\x33\x0a\x1b\x2d\x13\x13\xd7\x42\xdf\xc1\xc7\x94\xb5\x73\xe9\x48\xcb\xa1\x71\x0e\x5a\x0b\xfa\xa9\x21\x0d\x0a\xe2\x35\xe6\xa1\x29\x87\x2f\xd0\x5f\x8d\x24\xfd\x04\x8d\x08\xad\x03\xd2\xa2\xe2\x8d\x78\xa0\xba\xe1\xe5\xbb\x84\xcf\xa3\xa2\x25\x57\x2a\x1a\x69\xc4\xa8\x1d\xeb\x55\x5e\x36\x45\x4c\x21\x7f\x29\x91\x0b\x74\x81\x56\xca\x24\xd1\x2e\x2c\xf9\x59\xa2\x9e\xd5\x44\x2f\x50\x13\x44\x87\xf6\x2e\x59\x3f\x83\x90\xc8\x31\x8e\xb3\x8a\x7a\x07\xe4\x07\xd7\x60\x26\xc1\xff\x40\x31\x8c\x5b\x14\xa4\xd5\xe0\x07\x7c\x0a\xcb\xc5\x29\xe5\x19\x24\x2a\x38\x67\xa0\x1c\x72\x24\x35\xd9\x47\xfe\xa0\xfb\xca\x41\xe3\xb1\x6e\x86\xee\x14\xac\x7b\x83\x16\xc5\x75\xbc\x1c\x8d\xd9\xc7\xf1\x32\x6e\xaa\xe9\x59\xe5\x05\xcd\x4c\xe1\xbb\xd8\x47\xa4\x0b\xfe\x97\x34\x03\x60\xb6\xc3\xf5\x23\xa4\x9b\xf0\xca\x1e\xc7\xbb\x09\x03\x3c\xa6\xde\xa4\x5f\xec\xed\x67\xdf\x84\x11\x9f\x4b\xc0\xe9\x59\xfa\x02\x1c\x9c\x98\x8e\x81\x86\xc9\xcb\x68\x98\xa7\xa7\xa5\xe1\xfe\x1f\x51\xbe\x9c\x83\x9a\xfb\xfa\xc0\x41\xfe\xcd\xc3\xd0\xd7\x4b\xee\x27\x51\xa7\xe8\xf5\xc0\x4b\xa7\x89\x49\x50\x8a\x82\x7b\xcc\x8a\x59\x17\x7e\xd7\x91\x52\x1f\x9d\xf1\xa2\x57\xf8\xbd\x45\x4e\xe7\xc1\x85\xb0\x2f\x69\x6c\xf4\xdc\x60\x2d\xfa\x63\xc9\xec\x44\x3f\x09\x95\x89\xfe\x1d\xdc\x03\x33\x82\xb2\x32\xa4\x9a\xd0\x6f\x8b\x94\x7c\x0e\x8b\x71\x0d\x29\x44\x70\x01\xaa\x10\xb6\x45\xfb\xd0\xaf\x0d\xd7\x83\x85\x49\x4e\x9c\x0d\x8c\x4d\x48\x19\xd6\x03\x9f\x2c\xaf\x5d\xb0\x0d\xb0\x08\x7d\x34\x7c\xc4\xff\xa0\x78\x1b\xee\x57\x93\xe1\xab\x90\x86\x38\x8c\x39\x23\x7c\xe5\xd2\x92\xad\xf0\xdb\x07\x49\x0a\xcb\x72\xbe\xc2\x22\x2d\x5f\x07\x26\xa5\xac\x6e\x73\x5e\x1f\x41\xce\x91\xd3\xd0\x17\x17\xb4\x68\xa9\x0b\x52\x78\xf0\x09\x7d\x31\xfa\x60\xc7\x73\x52\xb0\x69\x49\x1d\x1a\x5e\x64\x0e\xca\x8d\xfd\x1e\xe2\x80\x32\x15\x9a\xfb\xda\x96\xe7\xa7\x84\xfc\xaf\xaa\x4f\xc7\xc5\x7c\x83\xfe\x3d\xe1\xaf\xc6\x70\xde\xf0\x42\x33\xb6\x65\x4b\x73\x0d\xf2\x2e\x99\x8b\x98\x97\x04\x2f\xaa\x22\xbf\xb8\x36\xdc\xef\x48\xf9\xdb\x9a\x9e\xe5\x53\xbf\x15\x29\x79\x9d\x07\x3e\x41\xd5\xc2\xe7\x83\x7d\xf6\x48\x01\x1c\x43\xd5\x11\xd3\x9f\xf2\x74\xf4\xd7\xcc\xfb\x48\x3a\x32\xca\xf3\x18\x3a\x2d\x1b\x27\xa7\xe7\x84\xe0\x99\x9b\xb2\x7e\xd1\x6f\x48\xea\x62\xec\x0b\xa2\xff\x07\x00\x00\xff\xff\x69\xb0\x59\xfb\x00\x30\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 24576, mode: os.FileMode(420), modTime: time.Unix(1510849075, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"20171115153101_create_job_table.down.sql": _20171115153101_create_job_tableDownSql,
	"20171115153101_create_job_table.up.sql": _20171115153101_create_job_tableUpSql,
	"20171115154457_create_joblease_table.down.sql": _20171115154457_create_joblease_tableDownSql,
	"20171115154457_create_joblease_table.up.sql": _20171115154457_create_joblease_tableUpSql,
	"20171115154634_create_jobresponse_table.up.sql": _20171115154634_create_jobresponse_tableUpSql,
	"20171115154931_create_schedule_table.up.sql": _20171115154931_create_schedule_tableUpSql,
	"20171115155747_create_crontab_table.up.sql": _20171115155747_create_crontab_tableUpSql,
	"20171115155941_create_schedulelease_table.up.sql": _20171115155941_create_schedulelease_tableUpSql,
	"20171115160316_create_relationships.up.sql": _20171115160316_create_relationshipsUpSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"20171115153101_create_job_table.down.sql": &bintree{_20171115153101_create_job_tableDownSql, map[string]*bintree{}},
	"20171115153101_create_job_table.up.sql": &bintree{_20171115153101_create_job_tableUpSql, map[string]*bintree{}},
	"20171115154457_create_joblease_table.down.sql": &bintree{_20171115154457_create_joblease_tableDownSql, map[string]*bintree{}},
	"20171115154457_create_joblease_table.up.sql": &bintree{_20171115154457_create_joblease_tableUpSql, map[string]*bintree{}},
	"20171115154634_create_jobresponse_table.up.sql": &bintree{_20171115154634_create_jobresponse_tableUpSql, map[string]*bintree{}},
	"20171115154931_create_schedule_table.up.sql": &bintree{_20171115154931_create_schedule_tableUpSql, map[string]*bintree{}},
	"20171115155747_create_crontab_table.up.sql": &bintree{_20171115155747_create_crontab_tableUpSql, map[string]*bintree{}},
	"20171115155941_create_schedulelease_table.up.sql": &bintree{_20171115155941_create_schedulelease_tableUpSql, map[string]*bintree{}},
	"20171115160316_create_relationships.up.sql": &bintree{_20171115160316_create_relationshipsUpSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

