// Code generated by go-bindata.
// sources:
// 20171115153101_create_initial.down.sql
// 20171115153101_create_initial.up.sql
// 20171115153102_jm_getjob.up.sql
// 20171115153103_sm_getschedule.up.sql
// 20171115153104_sm_startjobandupdatecron.up.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __20171115153101_create_initialDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xc8\xca\x4f\x4a\xb0\xe6\x02\x04\x00\x00\xff\xff\xe2\xbe\x7c\x92\x12\x00\x00\x00")

func _20171115153101_create_initialDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153101_create_initialDownSql,
		"20171115153101_create_initial.down.sql",
	)
}

func _20171115153101_create_initialDownSql() (*asset, error) {
	bytes, err := _20171115153101_create_initialDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153101_create_initial.down.sql", size: 18, mode: os.FileMode(420), modTime: time.Unix(1510931792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115153101_create_initialUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x8f\x9b\x30\x10\x3d\xc3\xaf\x98\x63\x90\xf6\x50\x55\x6d\x55\x29\x27\x2f\xf1\xb6\xa8\x60\x2a\xc7\xa9\x76\x4f\xe1\xc3\xae\x96\x2c\xc5\x11\x90\xed\xee\xbf\xaf\x02\x26\xd8\xc1\x21\xdb\x1e\x7a\x64\xde\x64\xde\xbc\x37\xe3\xc9\x9a\x21\xca\x80\x51\x44\xd6\xc8\x67\x41\x4c\x96\xae\xeb\xf8\x14\x23\x86\x81\xa1\xdb\x10\x43\xb2\x93\x59\x02\x0b\xd7\x01\x48\x0a\xde\x7d\x04\x84\x01\x89\x19\x90\x4d\x18\x02\xda\xb0\x78\x1b\x10\x9f\xe2\x08\x13\x76\xa3\xf2\x9a\xfc\x51\xf0\x43\x29\x54\xf2\x26\x0c\x7b\xe4\xf7\xa3\xa8\x12\x58\x21\x86\x59\x10\xe1\xc5\x27\xef\x54\xa8\xc7\xd3\xba\x4a\xe0\x07\xa2\xfe\x57\x44\x17\xef\xdf\x7d\xf8\xec\x69\xe0\x3e\x7d\x2d\x65\xca\x13\x88\xf0\x2a\xd8\x44\x0c\xdf\x6b\x3f\xfd\x4e\x83\x08\xd1\x07\xf8\x86\x1f\x60\xa1\x3a\xf5\xbc\x89\x9c\x9d\xcc\x4a\x91\x36\xa2\x57\xd4\xa5\xf5\xdf\xd7\x44\x75\xa9\x46\x56\x17\x2e\x65\xfe\x24\x78\xf6\x3a\x36\xfd\x71\x2a\xaa\x9d\x93\x7c\xa8\xda\xa2\x9c\x49\x30\x84\x8d\x0d\x5b\xb4\x1d\x47\x55\x8b\x66\x2f\xab\x46\x18\x23\x1b\x83\x6f\x18\xdd\x4e\x66\x05\x4f\xa6\x4a\x93\xb6\xf8\x25\xe6\x84\x8c\x2c\xfa\x7c\x8c\x94\xa2\x11\x75\x2d\xeb\x04\x6e\x83\x73\x48\x01\x97\x7e\x6a\x19\xef\x89\xcf\x66\xc5\xb8\x80\x0b\xfb\x4a\xce\x99\x20\x5e\x5a\x51\x57\x69\x79\xf4\x61\x66\xae\xd9\xeb\x2c\xdc\xed\xb2\xc5\x04\xeb\x1a\x1b\x19\x79\x2d\xd2\x56\xf0\xd9\x87\x92\xb7\xc5\xb3\xb0\x19\xc9\x45\x87\x1d\x0b\xf0\xb4\x35\x27\x66\xb5\xf2\x64\x8c\xcd\xc7\xbc\x96\x55\x9b\x6a\x17\xe0\x14\xf8\xfb\x2b\x70\xa6\x51\xd5\x99\x71\x70\x5f\x8b\xe7\x42\x1e\x9a\x39\x23\x2a\xf1\x32\xfb\xbc\xca\xb4\x69\x0f\x7b\x7e\xc5\xcf\xb3\x47\xa6\x9a\xb3\x18\xa2\x10\xe3\x86\x18\xb1\xeb\x77\x44\xa5\xff\xff\x5b\xe2\xd4\xa2\xc9\x8b\x8a\x0b\x3e\x5d\x1b\xbb\x01\xd3\x4b\x13\x90\x15\xbe\x87\x82\xbf\x6c\x87\x43\xb4\xed\x1e\xe3\xb6\xa3\x86\x98\x68\x17\x56\x5d\xe1\x9b\xa1\x2f\x6f\xe9\x02\x4c\xea\xe8\x54\xdb\x71\x67\xc6\x82\xa6\xe5\xda\x0a\xea\x85\x5d\x07\x85\x0c\x53\xfd\x4f\xcb\x75\x1c\xb4\x5a\x81\x1f\x93\x35\xa3\xe8\xe8\xf6\xcf\xa7\x63\xd7\x1a\x09\xb8\x8e\x73\x17\x53\x1c\x7c\x21\x83\xf2\x01\xf2\x80\xe2\x3b\x4c\x31\xf1\xf1\x1a\x86\xa0\x8e\x9f\x73\x0e\xba\x2f\xd1\xf6\x02\x77\x32\x9b\x72\xee\x64\x66\xd0\x75\xed\xab\xb8\x85\x66\x38\x7c\x97\x98\x06\xbc\x9f\x8c\x95\xae\xe0\x6f\x26\x1c\xd6\xd5\xca\xa6\xc0\x7f\xb0\x74\xbc\xd0\xa6\xa9\x8e\x63\xa5\xbf\x6c\xad\xb1\x3f\xea\x63\xda\xc3\xf0\xa2\xf5\x16\x54\x4c\x43\x97\xae\xeb\xc7\x51\x14\xb0\xa5\xfb\x27\x00\x00\xff\xff\x6f\x51\xc5\x82\x1a\x09\x00\x00")

func _20171115153101_create_initialUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153101_create_initialUpSql,
		"20171115153101_create_initial.up.sql",
	)
}

func _20171115153101_create_initialUpSql() (*asset, error) {
	bytes, err := _20171115153101_create_initialUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153101_create_initial.up.sql", size: 2330, mode: os.FileMode(420), modTime: time.Unix(1511436156, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115153102_jm_getjobUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xc1\x8e\xda\x30\x14\x3c\xdb\x5f\x31\xc7\x44\x42\xd5\x6e\xa5\xf6\xc2\x52\x35\x9b\x98\xe2\x2a\xb1\x57\x8e\x51\xd5\x13\x09\xc4\x2a\xa4\x86\xa0\x24\xb4\xda\xbf\xaf\xec\x40\xd8\x85\xde\xf2\x5e\xde\xbc\x79\x33\xe3\x58\xb1\x48\x33\xbc\x28\x19\xb3\x64\xa9\x18\x8a\x7a\xbf\xfa\x65\xfa\xba\x59\x17\x81\x6d\x36\xbf\x4d\xb5\x7e\xc5\x9f\xb2\xdd\x6c\xcb\x36\xf8\xf8\xe9\x73\x18\xd2\x67\xf6\x8d\x0b\x4a\x72\x1d\x29\x0d\xad\x22\x91\x47\xb1\xe6\x52\x4c\x29\x21\x39\xd3\xf8\x6a\xcb\xae\xe7\x09\x66\x48\xa3\x5c\xaf\xb8\xc8\x99\xd2\x2b\x9e\x04\x0f\xe1\x94\x52\x42\x86\x06\xb8\xd0\x12\x75\xb3\xb6\xa6\xec\x0c\x82\x5d\x55\x37\xeb\x09\x2e\x9c\x13\x14\x65\x5f\x4c\x50\x9c\x0e\xfd\xce\x16\x21\x08\x21\xc4\x13\xa4\x2c\xd6\xa0\x84\x90\xfa\xc3\x80\x71\xdf\x23\xcc\x15\xa7\x7e\xb3\xea\x77\x7b\xd3\xf5\xe5\xfe\x18\x84\xbe\xa7\x79\xc6\x72\x1d\x65\x2f\x51\x92\x04\x0b\xb9\x54\x13\x3c\x4e\x70\x33\x19\x52\x42\xe6\x4a\x66\x28\x9c\x7e\xd4\x0e\x98\xb2\xb9\xc6\x77\xc9\x85\xbb\xb5\x35\xdd\xb1\x39\x74\x06\x75\x0b\x29\x50\xb7\xc3\x09\xbb\x0a\x33\x9c\xcf\xb9\xc3\x0c\xfa\x6a\xeb\x01\x76\x18\x7a\x37\xfe\x63\xc1\x14\xf3\x82\xae\xeb\x78\x0e\xb1\x4c\x53\x44\x22\x19\xa4\xfe\xdd\x9a\x03\x9e\x66\xb7\x17\x5f\x06\x82\xe0\xb2\x7a\xa0\x3b\xe3\x43\x48\x05\xf7\xcb\xbb\x88\xa7\x3b\xc1\x4e\xb1\x54\x09\x53\x78\xfe\x89\x33\x4b\x94\xc7\x94\x90\x94\x67\x5c\xe3\x71\x48\x6c\x7e\x1b\x65\x88\x2f\x78\x80\x5e\x30\xe1\xd8\xdf\x84\x32\xa6\x72\xad\xba\xcd\xd6\x54\x27\x6b\xc6\x56\xe1\x68\x8a\xb1\x2c\xdb\xc3\xf8\x7d\x2c\x5f\x6d\x53\x56\xbe\xf4\x49\xf8\xfe\x9b\x38\x08\x17\x82\xa9\xff\x9b\x7b\xf5\xd6\x5e\xb3\xf0\xee\x9e\xd7\xbf\xb3\xe8\xee\x79\x86\xee\x01\x33\x91\x80\xcf\xa7\x14\x00\x62\x99\x65\x5c\x4f\x29\x13\xc9\xbf\x00\x00\x00\xff\xff\x05\x22\xfc\x02\x28\x03\x00\x00")

func _20171115153102_jm_getjobUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153102_jm_getjobUpSql,
		"20171115153102_jm_getjob.up.sql",
	)
}

func _20171115153102_jm_getjobUpSql() (*asset, error) {
	bytes, err := _20171115153102_jm_getjobUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153102_jm_getjob.up.sql", size: 808, mode: os.FileMode(420), modTime: time.Unix(1511384111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115153103_sm_getscheduleUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xcf\x6f\x9b\x30\x14\xc7\xcf\xcf\x7f\xc5\x3b\x82\x84\xaa\x76\xd2\x76\x49\x3b\x8d\x82\xb3\x7a\x02\x53\x19\x57\xd3\x4e\xb1\x6b\xac\x15\x8d\x92\x08\x9c\xa8\xf9\xef\x27\x43\x48\x48\xba\x5d\xb6\xe3\xfb\xe4\x7d\x9f\xbf\xef\x47\x48\x04\x8d\x25\xc5\x47\x51\x24\x34\x7d\x12\x14\x55\xff\xba\xfa\x69\x5d\x6f\x5e\x6c\xb5\x6d\xac\x0a\x9a\xb5\xf9\x65\xab\xe7\x3d\xee\x74\x67\x5e\x74\x17\x7c\xf8\xf8\x29\x0c\xc9\x3d\xfd\xca\x38\x81\x52\xc6\x42\xa2\x14\x31\x2f\xe3\x44\xb2\x82\x2f\x08\x40\x49\x25\x7e\x69\x74\xef\x58\x8a\x77\x98\xc5\xa5\x5c\x31\x5e\x52\x21\x57\x2c\x0d\xae\xc3\x05\x21\x00\x23\x40\xc6\x65\x81\xa6\x5b\xb7\x4e\x3f\x37\x56\xf7\x16\x83\xba\x3a\xc4\x11\x4e\x6f\x47\xa8\xb4\x53\x11\xaa\x6d\xeb\xea\x46\x85\x08\x00\x30\x3c\x94\xd1\x44\x22\x01\x00\xe3\xae\x4e\x42\x0f\x8e\x5a\x1f\x6c\x9d\x59\xb9\xfa\xd5\xf6\x4e\xbf\x6e\x82\x70\x60\x92\xe5\xb4\x94\x71\xfe\x18\xa7\x69\xf0\x50\x3c\x89\x08\x6f\x22\xbc\xc8\x0c\x09\xc0\x52\x14\xb9\x17\xa8\x43\x79\x85\xc6\x11\x00\x04\xc6\x39\x15\xf8\xad\x60\x1c\xd5\x71\x60\xd8\x1b\x2c\x38\xf6\xe6\xaa\xae\x26\x88\x77\x38\xf8\x9b\x62\x5f\x2d\xa3\x4b\x39\x6a\xcf\xda\x37\xae\xf1\x72\xe3\x9a\x53\x3f\x93\xfc\x10\x12\x80\xef\x0f\x54\xd0\x43\xdb\xad\x7d\x73\x78\x7b\x77\xe9\x1c\x63\x9e\xfa\x8c\xde\x5c\x69\xe3\xea\x9d\x37\x71\x33\xc1\xe0\xbc\x3e\x2b\x91\x3f\x65\x19\x16\x62\x78\xb8\xb3\xbd\xa9\xdb\xca\x56\x83\xe4\x00\x87\xd1\xe3\xed\x9f\x06\x54\x88\x94\x0a\xbc\xff\x81\x93\x9b\xb8\x4c\x08\x40\xc6\x72\x26\xf1\x66\x5c\xf7\xf2\xf2\x0e\x42\xfc\x8c\xd7\x28\x1f\x28\xf7\x86\x66\x9b\x84\x33\x6f\xc3\x54\x86\x7d\xf9\x4e\xd4\x69\x86\x2a\xc2\x23\xb5\x6f\xce\x76\xad\x6e\xea\x6a\x4e\x9f\xf7\xea\x24\xd4\x5d\x3b\x8b\x36\x7a\xdf\xac\x75\x35\x23\xa6\xb3\xda\xd9\x39\x19\xa7\x36\x03\x95\x1d\x90\x4f\xab\xb4\x9b\x7e\x31\xce\xbb\x9a\x4e\x63\xce\x2e\x9d\x7a\xfa\x3e\x6f\xd3\xd9\x5d\xbd\xde\xf6\x33\xe4\x67\x38\x0b\xfd\x3f\x69\xbb\xa9\x06\x7b\x1e\xfa\x7b\x1c\x2b\x5e\x5c\x24\xfc\xdf\x45\xce\xd5\xff\x70\x93\xe3\x51\xfe\x6d\x85\xef\x3f\x04\xa1\xff\x54\x50\x9e\x22\x5b\x2e\x08\x22\x62\x52\xe4\x39\x93\x0b\x42\x79\xfa\x3b\x00\x00\xff\xff\xf1\x88\x19\x68\x97\x04\x00\x00")

func _20171115153103_sm_getscheduleUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153103_sm_getscheduleUpSql,
		"20171115153103_sm_getschedule.up.sql",
	)
}

func _20171115153103_sm_getscheduleUpSql() (*asset, error) {
	bytes, err := _20171115153103_sm_getscheduleUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153103_sm_getschedule.up.sql", size: 1175, mode: os.FileMode(420), modTime: time.Unix(1511428097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20171115153104_sm_startjobandupdatecronUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcb\x8e\x9b\x30\x14\x5d\xdb\x5f\x71\x97\x20\x21\xd4\xae\x91\xa5\x52\x70\x5b\xa4\x04\x22\xe3\xa8\x4b\x70\x6c\x4b\x21\x22\x80\xb0\xe9\xe3\xef\x47\xe6\x35\x93\xcc\x68\x76\xf7\x1e\xf9\x5c\xce\x83\x84\xd1\x98\x53\x38\xb1\x22\xa1\xe9\x99\x51\xa8\xcd\xbd\x32\x56\x8c\xf6\xd6\x5f\x44\xa7\xa6\x41\x09\xab\xe5\xd8\x77\xb5\xd7\x28\x23\xaf\x5a\x4d\xad\x86\xa6\xb3\x01\x34\xca\xe1\x56\x5c\x9e\xd6\x56\x0b\xb3\x3e\xe9\xf4\x3f\x77\x08\x6c\x73\xd7\xc6\x8a\xfb\xe0\xe3\xef\xf4\x67\x96\x63\x54\xf2\x98\x71\xe0\x2c\xce\xcb\x38\xe1\x59\x91\x47\x18\xa1\x92\x72\xf8\xd6\x0a\x63\xb3\x94\x1c\xe2\x92\x57\x59\x5e\x52\xc6\xab\x2c\xf5\xbe\xf8\x11\xc6\x08\x2d\x00\x64\x39\x2f\xa0\xbe\xf5\x97\x1a\x3c\x31\x76\x01\x0c\xe2\x7f\xdb\x0b\xe5\x54\x6c\x22\x03\xa8\xff\x5e\x75\x57\xfb\xf3\xe1\x03\x4d\x38\x60\x84\x90\x09\x67\xc2\x32\xee\xb4\x65\x7d\x4b\x76\xc8\x64\x65\xb5\x4b\xf7\x7c\x87\xfd\x60\xc5\x11\xf6\x1c\x0c\x46\xe8\xf7\x2f\xca\xe8\xbb\x03\xe4\x75\x9c\x85\x7f\x62\x6d\x71\x76\x3e\xa5\xae\x89\x2d\x52\x69\x17\x92\xbb\x2b\x6d\x38\x8c\xfa\x4f\xd3\x4f\x86\x48\x1b\xba\x50\x83\x15\x77\x33\x59\x53\xde\x30\xf7\x95\xa5\x37\x45\x9e\x1c\x6c\x72\xd7\x97\x7b\x65\x64\x9f\x3e\xd0\xb2\xf4\x29\x6d\xbb\xda\x70\xe4\x51\x1b\xd9\x74\x4a\x2b\x20\xf0\xf5\x21\x04\x69\xdb\xf0\xf1\x57\x20\x8f\xeb\x1a\xc7\x5c\xc8\x9a\x48\x84\x01\x00\x92\xe2\x78\xcc\x78\x84\x69\x9e\xbe\x04\x00\x00\xff\xff\xd1\xd2\x01\x96\x97\x02\x00\x00")

func _20171115153104_sm_startjobandupdatecronUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20171115153104_sm_startjobandupdatecronUpSql,
		"20171115153104_sm_startjobandupdatecron.up.sql",
	)
}

func _20171115153104_sm_startjobandupdatecronUpSql() (*asset, error) {
	bytes, err := _20171115153104_sm_startjobandupdatecronUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20171115153104_sm_startjobandupdatecron.up.sql", size: 663, mode: os.FileMode(420), modTime: time.Unix(1511436916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x99\x5b\x6f\xdc\x46\xf2\xc5\x9f\x87\x9f\x82\x11\x90\x60\xe6\x0f\xfd\x25\x92\xcd\xab\x00\xbf\x24\xce\x02\x79\xd8\x04\xd8\x24\x4f\xdb\x0b\xa1\x49\x36\x15\x66\xa5\x19\x65\x66\x94\xb4\x6d\xf8\xbb\x2f\x7e\x5d\x45\x59\x51\x7c\x53\xe2\xdd\x07\x59\x1a\x0e\xbb\xba\x2e\xa7\x4e\x9d\x6e\x9f\x9f\xa7\x5f\xed\x46\x9f\x5e\xf9\xad\xdf\xbb\xa3\x1f\xd3\xfe\x45\x7a\xb5\xfb\xff\x7e\xde\x8e\xee\xe8\xce\x92\xf3\xf3\xf4\xb0\xbb\xdb\x0f\xfe\x70\xc1\xdf\x45\x96\x37\x79\x9e\x57\x79\x65\xf2\x2c\xbf\x1c\xf6\xde\x1d\xfd\xe5\xbc\x9d\x8f\xb3\xbb\x3e\x1b\x77\xbf\x6d\xcf\x0e\xbf\x5c\x7f\xf8\xcd\xbb\xdb\xb7\xbe\x57\x5c\xfe\x7c\x73\x79\xe5\x8f\x3f\xef\xfa\x77\xbd\x62\x2e\x0f\xf1\x95\xc3\xf0\x93\x1f\xef\xae\xfd\xbb\xde\x2b\x79\xef\x70\x74\x7b\x8c\xb9\xed\x78\x77\x3b\xba\xa3\x1f\xf6\xbb\xed\x83\x15\x4b\x98\x57\x3b\x3e\x3d\xff\x2e\xfd\xf6\xbb\x1f\xd2\xaf\x9f\x7f\xf3\xc3\x67\x49\x72\xeb\x86\x7f\xbb\x2b\x9f\xde\xcc\x57\x7b\x77\x9c\x77\xdb\x43\x92\xcc\x37\xb7\xbb\xfd\x31\x5d\x27\xab\x93\xfe\xc5\xd1\x1f\x4e\x92\xd5\xc9\xb0\xbb\xb9\xdd\xfb\xc3\xe1\xfc\xea\xe5\x7c\xcb\x83\xe9\xe6\xc8\xaf\x79\x27\xff\x9e\xcf\xbb\xbb\xe3\x7c\xcd\x87\x5d\x5c\x70\xeb\x8e\x3f\x9d\x4f\xf3\xb5\xe7\x0f\x1e\x1c\x8e\xfb\x79\x7b\x15\xbf\x3b\xce\x37\xfe\x24\xd9\x24\xc9\x74\xb7\x1d\x16\xf7\xfe\xe1\xdd\xb8\xe6\x8f\xf4\x9f\xff\x62\xdb\xd3\x74\xeb\x6e\x7c\x2a\xcb\x36\xe9\x7a\x79\xea\xf7\xfb\xdd\x7e\x93\xbe\x4a\x56\x57\x2f\xe3\xa7\xf4\xe2\x59\x8a\x57\x67\xdf\xfa\xdf\x30\xe2\xf7\xeb\xe8\x36\x9f\xbf\xbc\x9b\x26\xbf\x8f\x66\x37\x9b\x64\x35\x4f\x71\xc1\x67\xcf\xd2\xed\x7c\x8d\x89\xd5\xde\x1f\xef\xf6\x5b\x3e\x9e\xa6\xd3\xcd\xf1\xec\x6b\xac\x4f\xeb\x13\x0c\xa5\x9f\xff\x72\x91\x7e\xfe\xeb\x89\x78\x12\xf7\xda\x24\xab\xd7\x49\xb2\xfa\xd5\xed\xd3\xfe\x6e\x4a\x65\x1f\xd9\x24\x59\x5d\x8a\x3b\xcf\xd2\x79\x77\xf6\xd5\xee\xf6\xc5\xfa\x8b\xfe\x6e\x3a\x4d\xaf\x5e\x6e\x92\xd5\x70\xfd\xf5\xe2\xe9\xd9\x57\xd7\xbb\x83\x5f\x6f\x92\x4f\xe5\x0f\x66\xc4\xfe\x3b\x0c\xf9\xfd\x5e\xfc\xd6\x87\xfd\xdd\x74\xf6\x25\xae\xaf\x37\xa7\xbc\x91\xbc\x4e\x92\xe3\x8b\x5b\x9f\xba\xc3\xc1\x1f\x49\xf9\xdd\x70\xc4\x4a\x8c\x4f\xeb\x91\xac\xe6\xed\xb4\x4b\xd3\xdd\xe1\xec\x6f\xf3\xb5\xff\x66\x3b\xed\xee\xd7\x69\x09\x97\xe7\x0f\x2c\xc4\x1a\xa6\xa9\x96\x31\x59\x1d\xe6\x97\xf1\xf3\xbc\x3d\xd6\x65\xb2\xba\xa1\x2d\xd3\x7b\xa3\x7f\xdf\x8d\x3e\x3e\xfc\x61\xbe\xf1\x29\x30\x39\xe3\x2f\xf6\x89\x50\x59\x4f\xf3\xe3\xbd\x36\xe9\xb7\xee\xc6\xaf\x37\xba\x03\x7b\x6a\x94\xd3\x7c\xc6\xee\xc9\xeb\xf7\xac\xfd\x7e\x7e\xc9\xda\xe8\xcd\xef\x97\xe2\xe8\x7b\x97\xe2\xeb\x7a\xf3\xd0\xf3\xdf\x1b\x20\xb4\x0f\x19\x20\xb8\xf5\xe6\x4d\xa0\x7f\xb0\xa0\xd1\xbf\xdb\xc8\x37\x87\xe7\xf3\x7e\xbd\x49\xfb\xdd\xee\xfa\xe1\x6a\x77\x7d\xf8\x40\xe4\x2f\x0e\x12\xb8\xdf\x4f\x6e\xf0\xaf\x5e\x3f\x58\xad\x90\x00\xe5\x97\x97\xef\xa5\xb8\xe7\xbb\xdf\xb6\xdf\xff\x72\x9d\x3e\x53\x90\xac\x4f\x6c\xc8\x27\x1b\xda\xde\x86\xac\xb5\x21\xcb\xde\xfe\x33\x4d\x36\x34\x85\x0d\x59\x67\xc3\xc4\xef\xc9\x86\x2a\x93\x35\x4d\x6e\x43\x53\xca\x73\xfe\xae\x2a\x1b\xca\xd6\x86\x81\x1f\x67\x43\x39\xd9\x50\x3a\x1b\xfa\xcc\x06\x5f\xdb\x90\xb1\xbe\xfc\xbd\x6d\x7e\x7c\x61\x43\xef\x6d\x68\x06\x1b\xba\xc2\x86\xbc\x78\xe8\xc3\xc9\x42\x3f\x1f\x15\xa0\x76\xcb\xdb\x58\x68\xe9\xa9\x07\x2c\x96\xac\x56\x1f\x97\xb7\xd3\x64\xb5\x3a\xf9\xb8\x69\x73\x72\x9a\xac\x36\xf7\x8d\xf0\x51\xd6\xf1\xf7\xff\x62\x4b\x3f\xf4\x37\xf6\xf4\x3d\x71\x3e\x25\xfa\x0f\xf1\xd5\x3d\xcd\x44\xa2\xb8\x78\xf6\x18\x74\xaf\x68\xc7\x8b\xf4\xa3\x03\x4e\xe9\xc1\x8b\x34\x6f\x4f\x53\x9a\xe9\xe2\x61\xaf\xad\xcb\x22\xdb\xc4\xe7\xb4\xc8\x85\xb4\xd0\x8f\xdb\x39\xac\xf3\x2a\xcf\x3a\x93\x37\x5d\x71\x9a\x66\x9b\xd7\xc9\xca\xe1\xca\x17\x31\x0f\xaf\x62\xf0\x17\xa9\xe6\x00\x3f\x2f\xe2\xbf\xaf\xef\xeb\xe8\x4e\x9f\x00\xff\x1f\x6f\xff\x2c\xf8\xfb\x41\x81\x3d\xda\xd0\x4e\x36\x74\xbd\x0d\x26\xb3\x21\xcf\x6c\x30\xa3\x0d\x83\xb1\xc1\xf1\xbc\xb5\xa1\x36\x36\x74\xac\xab\xa5\x49\x58\x57\x8f\xf2\xbb\xe8\x6c\x28\x1a\x1b\x0a\x40\x9f\xdb\xd0\xd7\x36\x38\xd6\x64\x36\x14\xce\x86\xa1\xb1\xc1\x75\x36\x34\xb5\x34\x8e\xcf\xd5\xb6\xb7\xa1\xab\x6d\x28\x06\x1b\x86\xca\x86\x3c\x97\x3d\xfc\x68\x83\xf7\x36\xf4\x93\xec\x4f\x73\x15\xb5\x0d\x23\xcd\x97\xdb\x50\xe4\x36\x8c\xbd\x0d\x39\x8d\xe5\x6c\xa8\x4b\x1b\x46\xff\xe6\x37\x71\x99\xc6\x06\x6f\x6c\x18\x3a\x1b\x3a\x27\x6b\x68\xdc\x16\xdf\x73\x1b\x4a\xde\xad\xa5\xa1\xeb\xc6\x86\x92\x67\x83\xf8\x83\x5f\xbe\xb7\x61\x6a\x6d\xc8\x4b\x1b\x0a\x63\x43\x5b\xdb\xd0\xe6\x36\xb8\x65\xef\xcc\x86\xd2\xd8\xd0\x17\x36\x74\xc6\x86\xaa\x53\x12\xe8\x6d\x18\x1b\x1b\xb2\x5c\x08\x23\x73\xe2\x53\x33\x0a\x41\xb4\xa5\x7c\xd7\x76\x36\xe4\x9d\xc4\x4b\xfe\xf3\x56\xd6\x8f\x4a\x2a\x0d\x7b\xeb\x3e\x9d\x12\x09\xf5\xcc\x8d\xe4\xd1\x19\x21\x27\x62\x9b\x06\x89\x69\x52\x9f\xa8\x47\xa5\xe4\x45\xde\xb2\xc1\x86\xa6\xb7\xc1\xf3\xac\x91\xb5\xd4\x07\x32\xaa\x5a\xc9\x0d\xf1\x11\x03\xfb\xc5\xfa\x54\x52\x53\x3f\x89\x2d\xde\xa7\x8e\x23\x31\x3b\x21\x3f\x0f\x96\xb0\x57\xd8\x30\x79\x1b\xaa\x46\xf2\x9a\xeb\xba\x71\x92\xb8\xc9\xa3\x1f\x6c\xa8\x3b\x59\x63\x34\x1f\xc5\x68\x43\x5d\x49\x5d\x88\xab\x6d\x25\x06\x30\x43\xad\xb1\x85\xef\xd8\xa9\xc1\x26\xf8\x1a\x6d\x28\xbd\x0d\xad\x91\x7c\x8c\xb9\xf8\xc0\x1e\xc4\x00\xf6\xc1\x1d\x75\x32\xe4\xa6\x12\x3c\x90\xef\x8e\xfa\x82\xeb\x41\xfc\xef\x78\xa7\x16\xff\xf1\x7d\x24\xce\x4a\xd6\xb0\xe7\xa8\xf1\x34\x95\xe0\xb7\x24\x47\xb5\xc4\x57\x78\xf1\x9d\xb8\x8b\x52\xea\x45\x6f\xb0\x27\x36\xf1\x93\xc1\x41\x2c\xce\xc9\xbe\xe0\x84\x41\x40\x2e\xa9\x33\xfb\xe2\x53\xd9\x49\xdf\x81\x8d\x16\x9c\xd0\x57\xbd\x0d\x3d\xb9\x24\xde\x46\xfa\x8c\x9e\xae\x6b\xe9\x33\xd7\x8b\x3f\xe0\x06\x7c\x82\x15\x72\x52\x4f\xf2\x6c\xd4\x3c\xf1\x7e\x56\x49\xdf\xb9\x5a\xe3\x36\xd2\xa3\xe4\xac\xa8\x64\x80\xc5\xbd\x07\xe9\xc5\xc9\x89\x9f\x7c\xee\x4a\xf1\x93\xde\x24\x0f\xd4\x8c\xde\x00\xcb\xb5\xd6\xa1\x31\x8a\x75\xfa\xb7\xb1\xa1\x61\x5f\x27\xf8\x06\x07\xe4\x7e\x98\xc4\x17\x70\xd5\xb7\xd2\x87\xf4\xca\xd4\x8b\x4f\x03\x5c\x00\x8f\xd0\x9f\x60\xc9\x09\xa6\xa9\x0b\xb8\x69\x18\xd2\xec\x99\x8b\x1d\x7a\x74\xec\xc4\x17\x7c\x1e\x07\xe1\x0d\xfa\x91\x3d\xf0\x8f\xef\x72\xa7\x7d\xa4\x36\xf0\x7f\x2c\xa4\x8e\x60\x0d\x1b\x6d\x23\xc3\xb9\x6f\xd4\x3f\x23\x3d\xc8\x1a\xf8\xa3\xac\xe4\x1d\x6a\x11\x7d\xce\xa4\x36\x46\x7b\x04\x7f\xfa\x4a\xfa\xad\xd6\x3c\x0e\xa3\xf4\x4b\xaf\x9c\x42\xfd\xe0\xd7\x98\x97\x46\xfa\x00\x6e\xa1\x06\xe4\xa0\xe8\x6d\x68\x32\xa9\x11\x71\x8f\x95\xe4\x23\x0a\x11\x72\xa2\x9c\xee\xc1\x64\x21\xdc\x47\xef\x9b\x4e\xea\x0f\xce\xe0\x5e\x53\x88\x3d\xf6\xa5\xaf\xf0\x93\xfc\x21\x6e\xe0\x00\x6a\x43\x8c\xd4\x83\x38\xc1\x16\x7b\x62\x8b\xcf\x60\x27\xd6\x3b\x13\xfe\x6c\x15\x63\x7d\x2e\xf9\x6c\xb4\x27\x62\x9f\xa8\xc8\x01\xab\xf0\xd3\xa8\x58\x21\x67\xf8\xda\x3a\xc9\x17\xfd\x5e\x8d\x52\x87\xbe\x17\x9c\xc0\x23\x65\x2f\x7d\x0f\x07\xe6\x95\x08\x25\xf2\xdc\x16\xc2\xfd\xf5\x20\x9f\x23\xcf\x96\x52\x5f\xe2\xf6\x8a\x5f\xa7\xfe\xc5\xf9\xd4\x4a\x5e\xa9\x2b\x7b\xc1\x61\xe4\x1b\x1e\xa0\x5f\xe8\x0b\xaf\x1c\x0d\xcf\x7b\xf8\xab\x15\x6e\x83\xcf\xc9\x33\x73\x60\xa8\x65\x7f\x72\xe2\x2b\xe9\x53\x38\x9c\xf7\xdb\x4a\x6c\xc3\x37\xfc\x0d\x37\x55\x46\x39\x69\xb2\x61\xe8\xa5\x47\xf2\x41\xfc\x05\xc3\xcc\x0c\x38\x89\x9e\x03\x2f\xf8\xcc\xbe\x5e\xf9\x82\x3a\xb8\x46\xe6\x2b\x7c\x03\x5e\x11\xa4\xb1\x47\xbc\xf4\x56\x8c\xcb\x88\x5d\xfa\x32\xf2\xb5\xf2\x3f\xb9\xe4\x37\xfd\x44\x0d\x4c\x2f\xf1\x99\x5c\xf0\xc0\x0f\x36\xc9\x93\xcb\xc4\x26\xf3\x04\xbb\x99\x17\x2e\x27\x3f\xf0\xe8\xa4\x42\x96\x1a\x83\x23\xf2\x87\x40\xf6\x3a\x5b\xc1\xf9\x98\x49\x8c\xd4\x02\x0e\x8a\x7e\x56\xf2\x9d\x69\x55\xe8\x36\x52\x93\xac\x56\xfc\x4f\xca\x25\x95\xce\xd6\x4c\xea\xc1\x6c\x22\x26\xe6\xf0\xa8\x73\x80\xbc\x0f\xec\x31\xe9\x1c\x2c\xc5\xc6\xa8\xbd\x01\x0f\x13\x03\xf9\x02\x83\x0b\x4e\xdc\x28\x18\x65\x46\x50\xab\x98\x4f\x27\x3a\x83\x7e\x8d\x33\x8a\xda\xd4\x52\x73\x72\x04\xae\xf0\x75\x99\xf7\xf4\x2b\xbd\x47\x5f\xb2\x77\xc4\x78\x2f\x3d\xfe\x58\xd8\xe3\x7f\xa5\x73\x12\xbc\x2c\x75\x7b\x92\xb0\x8f\xd2\xed\x53\xcb\xfa\x68\xf4\x23\x44\xbd\xdc\xcd\x3c\x45\xd2\x47\xcb\x7f\x5d\xd0\x3f\x8c\xfa\x7f\x23\xe7\x97\x50\x55\xcc\x17\xc6\x64\x4f\x95\xf3\x79\x69\xea\xbc\xaa\x3f\xbd\x9c\x7f\x70\x11\xf7\xe7\x95\x3c\x1d\x50\x15\xa2\x8e\xe9\x0e\x90\x6f\x74\xc2\x98\x41\x18\x8e\x09\x02\x2b\x0c\xca\xe0\x4c\x11\xba\x8e\x29\x1e\x91\x4e\xe7\x15\x62\xc7\xe8\xb4\xa2\x8b\x61\x15\xa6\x4b\xaf\xd3\x18\xfb\xcb\x84\x82\xbd\x41\xfd\x50\xaa\xd2\x29\xdf\x30\x0d\xaa\x08\x16\x8c\x8a\x56\x95\x3c\x2a\xb0\xcc\x44\xdd\xc1\x1a\x28\x63\xd8\x8b\x89\xbf\x28\x77\xa6\xb4\x31\xc2\xf2\x95\x4e\x1e\xd4\x05\xcf\xf8\xbe\x68\x65\x32\x33\xad\x60\x25\x18\x81\x09\xc5\xb4\x69\x74\x2f\x14\x4c\x54\x67\x4e\x18\x2e\x2a\xdb\x46\xd8\x98\x53\x0b\x0a\x8d\xf7\x50\xde\x4c\xee\x65\x2a\xc2\x54\x28\x08\xd4\x13\x39\x85\xd1\x8d\x2a\xa5\xa8\x62\x3b\x65\xe4\x56\x54\x04\x13\x83\xbc\xb5\xaa\x0c\x50\x32\x30\x26\x4a\x01\x15\x8e\x92\x83\x99\x8a\x42\xd4\x26\xd3\x36\x4e\xd2\x5a\xf2\x0c\x0b\xc5\xd3\x53\x2e\x93\x9c\xa9\xc8\x3e\xa8\x04\xf6\x8e\xcc\xd4\x48\x8e\x61\x58\xf2\xc0\x04\xa9\x06\xc9\x67\xaf\x57\x12\x28\x05\xfc\x41\x45\x74\x5e\xaf\x22\xf4\xa4\x85\x82\x8b\x7b\x15\x52\x9b\xc8\xca\xad\x30\x2a\x27\x80\x66\x51\x3c\xb5\x4e\xbd\x41\x26\x1b\xac\x56\xe9\x09\x2f\x9e\xa6\x7a\xf1\x03\xe5\x8b\x6a\xa5\xf6\xe0\x8b\x3c\x83\x2d\x62\xe1\x64\xc8\x77\x4c\x16\xa6\x22\xaa\x0e\xc6\x25\xbe\x4c\x4f\x1a\x60\x85\xb5\x60\xa5\x50\xf6\x77\xaa\x7e\xe3\x09\x53\x59\x9b\x89\xc6\x54\x46\x89\xa3\x70\x50\xed\xa8\x04\xa7\x0a\x13\x9f\x61\x7a\xa6\x15\xca\x26\xe6\xae\x92\xa9\x8d\x2a\x8f\x98\x28\x45\x55\xc4\x35\x9d\x4c\xf7\xa5\x3e\xf8\x5d\x28\x8b\x77\xcb\xf5\x0d\x13\x4d\x4f\x4f\xf8\x48\xef\xa0\xa2\x51\x60\xe0\x0f\xdc\x2d\xb9\xf4\xaa\xa6\xa3\x22\x6f\x25\x6e\xfc\x42\x05\x11\x3f\xbd\x03\x96\xfa\x65\xdf\x46\x95\x51\x25\x2a\x08\xdc\xd1\x67\xe3\x32\xb9\x3a\x99\x76\xd4\x87\x9a\xe0\x4b\x3c\xc9\x65\xaa\x4c\xb5\xd7\xa2\x82\x72\xe2\x0f\x7b\x46\x25\xd7\xe9\xf7\xaa\xde\xc1\x8f\x57\xa5\xd5\xa8\x82\xa3\x37\xa8\xe3\xa4\xd3\x73\xd0\x49\x37\x19\x55\x3c\x3a\x05\x39\xc9\x44\x65\xa0\x27\x62\x94\x07\x7c\x01\x86\x89\x9f\xba\x61\x03\xbf\x51\x8d\x99\x11\xcc\x45\x15\xdc\xa8\x5a\x99\x24\x0e\xec\x32\xed\xc9\x03\xfb\x53\x67\x14\x0a\xbd\x5d\x2e\xa7\x86\x4a\x4e\xa5\x83\xaa\x43\x4e\x81\xd4\x8b\xf7\xf0\xb1\x54\x5f\xa8\x09\xf1\xe3\x4f\x3c\x6d\x79\x39\x59\x18\x55\x92\xe0\x1c\x6e\xeb\x14\x47\xfc\xa6\x3f\xe9\x15\xf6\x6b\x94\x47\x6a\xad\x13\x6a\x14\x0c\xb0\x1f\x38\x68\xf4\x54\x02\x17\x19\x3d\x05\xc3\x53\xe0\x0f\x1c\x19\x55\x85\xe0\x27\xaa\x0d\x27\x2a\x7f\x54\x45\x11\x4f\x02\xbd\xd4\x1a\x15\xca\xfa\x5a\x79\x09\xff\x0b\xe5\xe1\x41\x7b\x3c\x9e\x80\x07\xc9\x55\xbc\x49\x31\xb2\x0e\xbc\x72\xd2\xe1\x54\x38\x69\x9c\xf1\x66\xa6\xd5\x1b\x00\x55\xc8\xf0\xde\xa4\xb7\x36\xe0\x3f\x9e\x5a\x6b\xf1\xbf\x57\xd5\x83\x72\xa3\x36\x28\xcb\x5e\x15\x7f\x54\x9f\x5e\xfa\x01\x3e\xe0\x6f\x70\x12\xf1\x94\x4b\x0e\x16\x55\x9a\xeb\x95\x66\x5d\x08\xc7\xc4\x5e\x1f\x44\xed\x82\xcd\x5c\x6f\x58\xb0\xfd\x78\x26\xf1\x43\x6d\xc1\xcd\x34\xe8\x2d\x4e\x2b\x78\x79\xaf\x4a\x7a\x3c\x11\xff\xaa\x40\x7a\x6c\xef\x8f\xda\xe8\x8f\xff\x19\xf6\x3e\x59\xf4\xd8\xde\xd3\x15\xd1\x3b\x22\xfc\xaf\x88\xa1\xb7\xc5\xa6\x3a\xa8\xcd\x9e\x7c\xab\x99\x9b\xb6\xcc\xf3\xfc\xd3\xcb\xa0\xc7\xff\xd9\xf8\xe7\xb5\x10\xfc\x14\xb9\x40\x55\xfa\xfd\xad\xa6\xf2\x03\xcf\xf9\xe1\x84\xc1\xcc\x87\x67\xe8\x27\x7a\xdc\x39\xe1\x4b\x66\x69\xbc\xad\xec\xf4\xfb\x51\x4f\xa5\x46\x78\x0c\x2c\x57\xcb\x3c\xd0\x5b\xb1\x85\xa7\xe0\x00\xa7\xb3\x8a\x75\x9d\xde\xdc\x75\x7a\xf3\x33\xe9\xad\x48\xd1\xbc\xe1\x40\x7e\xa2\x4e\x19\x65\x0e\xc3\x57\x93\xde\xd8\xc1\x13\x51\x97\x4c\xb2\x0e\x0d\x11\x79\x53\x6f\x8b\x8a\x4a\xe2\x28\xf5\xf4\x82\xee\x32\xba\x8e\xf9\x4e\xdc\x95\x9e\xd6\xd9\x23\xce\x87\x4e\xf6\x8a\xa7\x18\x2f\x9c\xd8\xeb\x8d\x2e\xbe\x33\x5f\xe2\x8d\x40\x25\xfe\xd2\xf7\x4e\x6f\x1f\x8c\xde\xce\x36\x0b\xbf\xea\xdf\xf0\x12\xa7\xbf\x45\x2b\x45\xfd\x33\x08\x3f\xb0\x26\xea\x01\x27\x3c\x86\x0e\x8b\x7a\xb5\x96\x59\xea\xd4\x4f\xa3\xa7\x75\xaf\x33\x87\xb9\x41\xde\x79\x46\x0e\xd1\x8e\xd4\xa4\x50\xcd\x56\xeb\xcc\x8c\xb7\x94\x8b\x06\xd4\xd3\x27\x39\x71\xca\x57\xd8\x8d\xb7\x4a\x85\x68\x10\x6a\x06\xf7\x46\x7d\xe6\x75\x76\x56\xaa\x53\x32\xd1\x1b\xec\x85\x7f\x71\x46\xe4\x7a\x33\xd3\xcb\x8c\xa3\xd6\x9c\x34\x8d\xde\x38\x30\xbf\xd0\x39\xad\xde\x8e\x1a\xa7\x3a\x47\xe7\x57\x3d\xd9\xff\x04\x00\x00\xff\xff\x03\x07\x48\x90\x00\x20\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1511436919, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"20171115153101_create_initial.down.sql": _20171115153101_create_initialDownSql,
	"20171115153101_create_initial.up.sql": _20171115153101_create_initialUpSql,
	"20171115153102_jm_getjob.up.sql": _20171115153102_jm_getjobUpSql,
	"20171115153103_sm_getschedule.up.sql": _20171115153103_sm_getscheduleUpSql,
	"20171115153104_sm_startjobandupdatecron.up.sql": _20171115153104_sm_startjobandupdatecronUpSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"20171115153101_create_initial.down.sql": &bintree{_20171115153101_create_initialDownSql, map[string]*bintree{}},
	"20171115153101_create_initial.up.sql": &bintree{_20171115153101_create_initialUpSql, map[string]*bintree{}},
	"20171115153102_jm_getjob.up.sql": &bintree{_20171115153102_jm_getjobUpSql, map[string]*bintree{}},
	"20171115153103_sm_getschedule.up.sql": &bintree{_20171115153103_sm_getscheduleUpSql, map[string]*bintree{}},
	"20171115153104_sm_startjobandupdatecron.up.sql": &bintree{_20171115153104_sm_startjobandupdatecronUpSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

